# Default values for minio-operator.

operator:
  image:
    repository: quay.io/minio/operator
    tag: v4.5.5
    pullPolicy: IfNotPresent
  imagePullSecrets: [ ]
  initcontainers: [ ]
  replicaCount: 1
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000
  nodeSelector: { }
  affinity: { }
  tolerations: [ ]
  topologySpreadConstraints: [ ]
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
      ephemeral-storage: 500Mi
  env:
    - name: MINIO_OPERATOR_TLS_ENABLE
      value: "on"
    - name: CLUSTER_DOMAIN
      value: "cluster.local"

console:
  image:
    repository: quay.io/minio/console
    tag: v0.22.3
    pullPolicy: IfNotPresent
  imagePullSecrets: [ ]
  initcontainers: [ ]
  replicaCount: 1
  nodeSelector: { }
  affinity: { }
  tolerations: [ ]
  topologySpreadConstraints: [ ]
  resources: { }
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000
  ingress:
    enabled: false
    ingressClassName: ""
    labels: { }
    annotations: { }
    tls: [ ]
    host: console.local
    path: /
    pathType: Prefix
  volumes: [ ]
  volumeMounts: [ ]

## Secret with default environment variable configurations to be used by MinIO Tenant.
## Not recommended for production deployments! Create the secret manually instead.
secrets:
  name: minio1-env-configuration
  namespace: minio-tenant-1
  # MinIO root user and password
  accessKey: minio
  secretKey: minio123

## MinIO Tenant Definition
tenant:
  # Tenant name
  name: minio-tenant-1
  namespace: minio-tenant-1
  ## Registry location and Tag to download MinIO Server image
  image:
    repository: quay.io/minio/minio
    tag: RELEASE.2022-12-12T19-27-27Z
    pullPolicy: IfNotPresent
  ## Customize any private registry image pull secret.
  ## currently only one secret registry is supported
  imagePullSecret: { }
  ## If a scheduler is specified here, Tenant pods will be dispatched by specified scheduler.
  ## If not specified, the Tenant pods will be dispatched by default scheduler.
  scheduler: { }
  ## Secret name that contains additional environment variable configurations.
  ## The secret is expected to have a key named config.env containing environment variables exports.
  configuration:
    name: minio1-env-configuration
  ## Specification for MinIO Pool(s) in this Tenant.
  pools:
    ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
    ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
    ## Note that the operator does not support upgrading from standalone to distributed mode.
    - servers: 4
      name: ss-0
      ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
      volumesPerServer: 1
      ## size specifies the capacity per volume
      size: 1Gi
      ## storageClass specifies the storage class name to be used for this pool
      storageClassName: mani-local-storage
      ## Used to specify a toleration for a pod
      tolerations: {}
      ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
      ## eligible to run on a node, the node must have each of the
      ## indicated key-value pairs as labels.
      ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
      nodeSelector: {}
      ## Affinity settings for MinIO pods. Read more about affinity
      ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
      affinity: {}
      ## Configure resource requests and limits for MinIO containers
      resources:
        requests:
          memory: 128Mi
      ## Configure security context
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      ## Configure topology constraints
      topologySpreadConstraints: []
    - servers: 4
      ## custom name for the pool
      name: ss-1
      ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
      volumesPerServer: 1
      ## size specifies the capacity per volume
      size: 2Gi
      ## storageClass specifies the storage class name to be used for this pool
      storageClassName: mani-local-xlarge-storage
      ## Used to specify annotations for pods
      annotations: { }
      ## Used to specify labels for pods
      labels: { }
      ## Used to specify a toleration for a pod
      tolerations: [ ]
      ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
      ## eligible to run on a node, the node must have each of the
      ## indicated key-value pairs as labels.
      ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
      nodeSelector: { }
      ## Affinity settings for MinIO pods. Read more about affinity
      ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
      affinity: { }
      ## Configure resource requests and limits for MinIO containers
      resources:
        requests:
          cpu: 250m
          memory: 128Mi
        limits:
          memory: 2Gi
      ## Configure security context
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      ## Configure topology constraints
      topologySpreadConstraints: []
  ## Mount path where PV will be mounted inside container(s).
  mountPath: /export
  ## Sub path inside Mount path where MinIO stores data.
  subPath: /data
  # pool metrics to be read by Prometheus
  metrics:
    enabled: true
    port: 80
    protocol: http
  certificate:
    ## Use this field to provide one or more external CA certificates. This is used by MinIO
    ## to verify TLS connections with other applications:
    ## https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
    externalCaCertSecret:
      - name: tenant-trusted-ca-secret
        type: Opaque
    ## Use this field to provide a list of Secrets with external certificates. This can be used to to configure
    ## TLS for MinIO Tenant pods. Create secrets as explained here:
    ## https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
    externalCertSecret: {}
    ## Enable automatic Kubernetes based certificate generation and signing as explained in
    ## https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster
    requestAutoCert: false
    ## This field is used only when "requestAutoCert" is set to true. Use this field to set CommonName
    ## for the auto-generated certificate. Internal DNS name for the pod will be used if CommonName is
    ## not provided. DNS name format is *.minio.default.svc.cluster.local
    certConfig: {}
  ## MinIO features to enable or disable in the MinIO Tenant
  ## https://github.com/minio/operator/blob/master/docs/crd.adoc#features
  features:
    bucketDNS: false
    domains: { }
  ## List of bucket names to create during tenant provisioning
  buckets: [ ]
  ## List of secret names to use for generating MinIO users during tenant provisioning
  users: [ ]
  ## PodManagement policy for MinIO Tenant Pods. Can be "OrderedReady" or "Parallel"
  ## Refer https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ## for details.
  podManagementPolicy: Parallel
  # Liveness Probe for container liveness. Container will be restarted if the probe fails.
  # Refer https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes.
  liveness: { }
  # Readiness Probe for container readiness. Container will be removed from service endpoints if the probe fails.
  # Refer https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  readiness: { }
  ## exposeServices defines the exposure of the MinIO object storage and Console services.
  ## service is exposed as a loadbalancer in k8s service.
  exposeServices: { }
  # kubernetes service account associated with a specific tenant
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccountName: ""
  # Tenant scrape configuration will be added to prometheus managed by the prometheus-operator.
  prometheusOperator: false
  # Enable JSON, Anonymous logging for MinIO tenants.
  # Refer https://github.com/minio/operator/blob/master/pkg/apis/minio.min.io/v2/types.go#L303
  # How logs will look:
  # $ k logs minio1-pool-0-0 -n default
  # {"level":"INFO","errKind":"","time":"2022-04-07T21:49:33.740058549Z","message":"All MinIO sub-systems initialized successfully"}
  # Notice they are in JSON format to be consumed
  logging:
    anonymous: true
    json: true
    quiet: true
  ## serviceMetadata allows passing additional labels and annotations to MinIO and Console specific
  ## services created by the operator.
  serviceMetadata: { }
  env:
  - name: MINIO_PROMETHEUS_AUTH_TYPE
    value: public
  - name: GOGC
    value: "20"
  priorityClassName: ""

ingress:
  api:
    enabled: false
    ingressClassName: ""
    labels: { }
    annotations: { }
    tls: [ ]
    host: minio.local
    path: /
    pathType: Prefix
  console:
    enabled: false
    ingressClassName: ""
    labels: { }
    annotations: { }
    tls: [ ]
    host: minio-console.local
    path: /
    pathType: Prefix
